package com.example.demo.Controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.DAO.EmployeeDao;
import com.example.demo.MODEL.Employee;
import java.util.Optional;





@RestController
@RequestMapping("/employee")
public class EmployeeController {
	
	//Inject the instance of employeeDao 
	@Autowired
	private EmployeeDao empDao;
	
	//Api for adding employees to db
	@PostMapping("/addEmployee")
	public ResponseEntity<String> addEmployee(@RequestBody List<Employee> employee) {
		empDao.saveAll(employee);
		return new ResponseEntity<String>(employee.size()+" Employees Added",HttpStatus.OK);
		
	}
	//Find employee by id
	@GetMapping("/findEmployee/{id}")
	public ResponseEntity<Employee> findEmployee(@PathVariable("id") Integer id) {
		Optional<Employee> employee=empDao.findById(id);
		if(employee.isPresent()) {
			return new ResponseEntity<Employee>(employee.get(),HttpStatus.OK);
		}
		return new ResponseEntity<Employee>(HttpStatus.NOT_FOUND);
		 
	}
	//List employee
	@GetMapping("/getAllEmployee")
	public ResponseEntity<List<Employee>> getAllEmployee(){
		List<Employee> allEmployees = new ArrayList<Employee>();
		empDao.findAll().forEach(allEmployees::add);
		return new ResponseEntity<List<Employee>>(allEmployees,HttpStatus.OK);
	}
	//Delete an employee
	@DeleteMapping("/deleteEmployee/{id}")
	public ResponseEntity<String> deleteEmployee(@PathVariable("id") Integer id) {
		if(empDao.existsById(id)) {
			empDao.deleteById(id);
			return new ResponseEntity<String>(HttpStatus.OK);
		}else {
			return new ResponseEntity<String>(HttpStatus.NO_CONTENT);
		}
		
		
	}
}
